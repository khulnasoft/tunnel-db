name: Tunnel DB - GitHub Releases
on:
  schedule:
    - cron: "30 */6 * * *"
  workflow_dispatch:

jobs:
  build:
    name: Build DB
    runs-on: ubuntu-latest
    steps:
      # Set up Go
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22
        id: go

      # Install bbolt
      - name: Install bbolt
        run: go install go.etcd.io/bbolt/cmd/bbolt@v1.3.5

      # Check out "github-releases" branch
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          ref: "github-releases"
          fetch-depth: 0  # Fetch entire history to avoid shallow fetch issues

      # Mark repository as a safe directory
      - name: Mark repo as a safe directory
        run: git config --global --add safe.directory /home/runner/work/tunnel-db/tunnel-db

      # Retry Git fetch if checkout fails
      - name: Retry Git fetch
        run: |
          for i in {1..5}; do
            git -c protocol.version=2 fetch --no-tags --prune --progress --no-recurse-submodules --depth=1 origin +refs/heads/github-releases*:refs/remotes/origin/github-releases* +refs/tags/github-releases*:refs/tags/github-releases* && break || sleep 15;
          done

      # Download vuln-list and advisories
      - name: Download vuln-list and advisories
        run: make db-fetch-langs db-fetch-vuln-list-main

      # Build the binary
      - name: Build the binary
        run: make build

      # Full Database
      - name: Build full database
        run: make db-build

      - name: Compact DB
        run: make db-compact

      - name: Compress assets
        run: make db-compress

      # Light Database
      - name: Build light database
        run: make db-build
        env:
          DB_TYPE: tunnel-light

      - name: Compact DB
        run: make db-compact
        env:
          DB_TYPE: tunnel-light

      - name: Compress assets
        run: make db-compress
        env:
          DB_TYPE: tunnel-light

      # Upload assets
      - name: Upload assets
        run: ./tunnel-db upload --dir assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write
  packages: write
